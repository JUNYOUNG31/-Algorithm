# 요세푸스 문제는 다음과 같다.
# 1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다.
# 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진
# 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다.
# 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다.
# 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.
# N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

# 첫째 줄에 N과 K가 빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000)

N , K = map(int, input().split())   # N : 사람 수 # K 점프할 수
list_N = list(range(1,N+1))         # N 만큼 사람을 1부터 N 까지 리스트화
list_K = []                         # 정답 리스트 변수
k = 0                               # 3번째 사람을 제거한다면 2칸씩 점프
for _ in range(N):                  # 사람 수 만큼 반복    
    if not list_N:                  # 리스트가 비엇다면
        break                       # 중단
    k += K-1                        # 점프를 계속하기위해 더하기
    if k >= len(list_N):            # 리스트를 넘엇다면
        k = k%len(list_N)           # 넘어간 만큼 처음부터 돌기
    list_K += [str(list_N.pop(k))]
    print(list_K)  # 정답 리스트에 빠지는 사람을 추가한다.

print('<'+', '.join(list_K) +'>')   # 출력형태로 나오기 위해 조인 사용

