# 톱니바퀴

# 총 8개의 톱니를 가지고 있는 톱니바퀴 4개가 아래 그림과 같이 일렬로 놓여져 있다. 또, 톱니는 N극 또는
# S극 중 하나를 나타내고 있다. 톱니바퀴에는 번호가 매겨져 있는데, 가장 왼쪽 톱니바퀴가 1번,
# 그 오른쪽은 2번, 그 오른쪽은 3번, 가장 오른쪽 톱니바퀴는 4번이다.
# 이때, 톱니바퀴를 총 K번 회전시키려고 한다. 톱니바퀴의 회전은 한 칸을 기준으로 한다. 회전은 시계 방향과 반시계 방향이
# 있고, 아래 그림과 같이 회전한다.톱니바퀴를 회전시키려면, 회전시킬 톱니바퀴와 회전시킬 방향을 결정해야 한다.
# 톱니바퀴가 회전할 때, 서로 맞닿은 극에 따라서 옆에 있는 톱니바퀴를 회전시킬 수도 있고, 회전시키지 않을 수도 있다.
# 톱니바퀴 A를 회전할 때, 그 옆에 있는 톱니바퀴 B와 서로 맞닿은 톱니의 극이 다르다면, B는 A가 회전한 방향과
# 반대방향으로 회전하게 된다. 예를 들어, 아래와 같은 경우를 살펴보자.두 톱니바퀴의 맞닿은 부분은 초록색 점선으로 묶여있는
# 부분이다. 여기서, 3번 톱니바퀴를 반시계 방향으로 회전했다면, 4번 톱니바퀴는 시계 방향으로 회전하게 된다.
# 2번 톱니바퀴는 맞닿은 부분이 S극으로 서로 같기 때문에, 회전하지 않게 되고, 1번 톱니바퀴는 2번이 회전하지 않았기 때문에
# 회전하지 않게 된다. 따라서, 아래 그림과 같은 모양을 만들게 된다.
# 위와 같은 상태에서 1번 톱니바퀴를 시계 방향으로 회전시키면, 2번 톱니바퀴가 반시계 방향으로 회전하게 되고,
# 2번이 회전하기 때문에, 3번도 동시에 시계 방향으로 회전하게 된다. 4번은 3번이 회전하지만, 맞닿은 극이 같기
# 때문에 회전하지 않는다. 따라서, 아래와 같은 상태가 된다.
# 톱니바퀴의 초기 상태와 톱니바퀴를 회전시킨 방법이 주어졌을 때, 최종 톱니바퀴의 상태를 구하는 프로그램을 작성하시오.

from collections import deque

gear = [[], [], [], [], []]                 # 톱니 4개 인덱스 맞춰서 
for i in range(1, 5):                
    gear[i] = deque(map(int, input()))      # 상태 추가
# for i in range(1, 5):
#     print(gear[i])


def right(gear_idx, d):                     # 오른쪽 확인
    if gear_idx > 4 or gear[gear_idx-1][2] == gear[gear_idx][6]:  # 톱니가 4이상이거나 오른쪽이랑 톱니의 상태가 같으면
        return                                                    # 멈춰
    if gear[gear_idx-1][2] != gear[gear_idx][6]:                  # 다르면 회전
        right(gear_idx+1, -d)                                     # 다음 톱니 확인( 빠져나오면)
        gear[gear_idx].rotate(d)                                  # 오른쪽 회전


def left(gear_idx, d):                                         # 왼쪽 확인
    if gear_idx < 1 or gear[gear_idx][2] == gear[gear_idx+1][6]:  # 톱니가 1이하거나 왼쪽이랑 톱니의 상태가 같으면
        return                                                    # 멈춰

    if gear[gear_idx][2] != gear[gear_idx+1][6]:                  # 다르면 회전
        left(gear_idx-1, -d)                                      # 왼쪽 톱니 확인(빠져나오고)
        gear[gear_idx].rotate(d)                                  # 회전


k = int(input())                                # 톱니의 변화수
for _ in range(k):                              # 돌려서
    gear_num, d = map(int, input().split())     # 기어 숫자랑 방향
    right(gear_num+1, -d)                       # 오른쪽 확인
    left(gear_num-1, -d)                        # 왼쪽 확인
    gear[gear_num].rotate(d)                    # 현재 기어 회전
# for i in range(1, 5):
#     print(gear[i])


ans = 0                     # 숫자의 합 구하기
if gear[1][0] == 1:
    ans += 1
if gear[2][0] == 1:
    ans += 2
if gear[3][0] == 1:
    ans += 4
if gear[4][0] == 1:
    ans += 8

print(ans)